        private async Task ProccessChooseBankMenu(Update update)
        {
            var chatId = update.Message!.Chat.Id;

            if (_currentUser.State == MenuState.InitBankFind)
            {
                await VariantsFindBankMenu(chatId, _currentUser);
            }
            else if (_currentUser.State == MenuState.BankFind)
            {
                switch (update.Message!.Text)
                {
                    case "Поиск по БИК":
                        await _botClient.SendMessage(chatId, "Введите БИК частично или целиком", replyMarkup: new ReplyKeyboardRemove());
                        _currentUser.State = MenuState.BankFindByBic;
                        await _userInfo.UpdateUserState(_currentUser, _currentUser.State);
                        break;
                    case "Поиск по названию":
                        await _botClient.SendMessage(chatId, "Введите название банка частично или целиком", replyMarkup: new ReplyKeyboardRemove());
                        _currentUser.State = MenuState.BankFindByName;
                        await _userInfo.UpdateUserState(_currentUser, _currentUser.State);
                        break;
                    default:
                        await VariantsFindBankMenu(chatId, _currentUser);
                        break;
                }
            }
            else if (_currentUser.State == MenuState.BankFindByName || _currentUser.State == MenuState.BankFindByBic)
            {
                var byNameOrByBic = (_currentUser.State == MenuState.BankFindByName ? 0 : 1);
                _banks = _bankInfo.GetBanksBy(update.Message.Text, byNameOrByBic);
                string bankData = "";
                if (_banks.Count == 0)
                {
                    bankData = "Банков с таким " + ((byNameOrByBic) == 0 ? "наименованием" : "БИК") + " не нашлось";
                    await _botClient.SendMessage(chatId, bankData);
                    await VariantsFindBankMenu(chatId, _currentUser);
                }
                else
                {
                    var strBuilder = new StringBuilder();
                    for (int i = 0; i < _banks.Count; ++i)
                    {
                        strBuilder.Append($"{i + 1}.\t{_banks[i].ShortName}\t{_banks[i].RCBic}\n");
                    }
                    bankData = strBuilder.ToString();
                    await _botClient.SendMessage(chatId, bankData);
                    await PeekBankMenu(chatId);
                }
            }
            else if (_currentUser.State == MenuState.BankChoose)
            {
                if (_banks.Exists(bank => bank.ShortName == update.Message!.Text))
                {
                    _bankId = _banks.Where(bank => bank.ShortName == update.Message!.Text).Select(bank => bank.Id).FirstOrDefault();
                    //_currentUser.State = MenuState.BankFound;
                    await _userInfo.UpdateUserState(_currentUser, MenuState.BankFound);
                }
                else
                {
                    await _botClient.SendMessage(chatId, "Выбирайте из списка!");
                    await PeekBankMenu(chatId);
                }
            }
            else // BankFound или ... 
            {
                await _botClient.SendMessage(chatId, "Что-то не так с сообщением: " + update.Message.Text);
                await VariantsFindBankMenu(chatId, _currentUser);
            }

            // Если банк нашелся, заканчиваем
            if (_currentUser.State == MenuState.BankFound)
            {
                await _botClient.SendMessage(chatId, $"Выбран банк {update.Message!.Text}", replyMarkup: new ReplyKeyboardRemove());
            }
        }